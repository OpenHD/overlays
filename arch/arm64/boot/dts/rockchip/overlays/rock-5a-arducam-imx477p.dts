/dts-v1/;
/plugin/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/pinctrl/rockchip.h>
#include <dt-bindings/power/rk3588-power.h>

/ {
	metadata {
		title ="Enable Arducam Camera IMX477P on ROCK 5A";
		compatible = "radxa,rock-5a", "rockchip,rk3588";
		category = "camera";
		exclusive = "csi2_dphy0";
		description = "Enable Arducam Camera IMX477P on ROCK 5A.";
	};


	fragment@0 {
		target-path = "/";

		__overlay__ {
			camera_pwdn_gpio: camera-pwdn-gpio {
				compatible = "regulator-fixed";
				regulator-name = "camera_pwdn_gpio";
				regulator-always-on;
				regulator-boot-on;
				enable-active-high;
				gpio = <&gpio1 RK_PD3 GPIO_ACTIVE_HIGH>;
				pinctrl-names = "default";
				pinctrl-0 = <&cam_pwdn_gpio>;
			};

			clk_cam_24m: external-camera-clock-24m {
				compatible = "fixed-clock";
				clock-frequency = <24000000>;
				clock-output-names = "clk_cam_24m";
				#clock-cells = <0>;
			};
		};
	};

	fragment@1 {
		target = <&i2c3>;

		__overlay__ {
			status = "okay";
			#address-cells = <1>;
			#size-cells = <0>;

			imx477p: imx477p@1a {
				compatible = "arducam,imx477p";
				reg = <0x1a>;

				clocks = <&clk_cam_24m>;
				clock-names = "xclk";
				power-domains = <&power RK3588_PD_VI>;
				reset-gpios = <&gpio1 RK_PD2 GPIO_ACTIVE_HIGH>;
				rockchip,camera-module-index = <0>;
				rockchip,camera-module-facing = "back";
				rockchip,camera-module-name = "IQ";
				rockchip,camera-module-lens-name = "default";

				port {
					imx477_out0: endpoint {
						remote-endpoint = <&mipidphy0_in_ucam2>;
						data-lanes = <1 2>;
						link-frequencies = /bits/ 64 <450000000>;
					};
				};
			};
		};
	};

	fragment@2 {
		target = <&csi2_dphy0_hw>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@3 {
		target = <&csi2_dphy1>;

		__overlay__ {
			status = "okay";

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					#address-cells = <1>;
					#size-cells = <0>;

					mipidphy0_in_ucam2: endpoint@3 {
						reg = <3>;
						remote-endpoint = <&imx477_out0>;
						data-lanes = <1 2>;
					};
				};

				port@1 {
					reg = <1>;
					#address-cells = <1>;
					#size-cells = <0>;

					csidphy0_out: endpoint@0 {
						reg = <0>;
						remote-endpoint = <&mipi2_csi2_input>;
					};
				};
			};
		};
	};

	fragment@4 {
		target = <&mipi2_csi2>;

		__overlay__ {
			status = "okay";

			ports {
				#address-cells = <1>;
				#size-cells = <0>;

				port@0 {
					reg = <0>;
					#address-cells = <1>;
					#size-cells = <0>;

					mipi2_csi2_input: endpoint@1 {
						reg = <1>;
						remote-endpoint = <&csidphy0_out>;
					};
				};

				port@1 {
					reg = <1>;
					#address-cells = <1>;
					#size-cells = <0>;

					mipi2_csi2_output: endpoint@0 {
						reg = <0>;
						remote-endpoint = <&cif_mipi2_in0>;
					};
				};
			};
		};
	};

	fragment@5 {
		target = <&rkcif>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@6 {
		target = <&rkcif_mipi_lvds2>;

		__overlay__ {
			status = "okay";

			port {
				cif_mipi2_in0: endpoint {
					remote-endpoint = <&mipi2_csi2_output>;
				};
			};
		};
	};

	fragment@7 {
		target = <&rkcif_mipi_lvds2_sditf>;

		__overlay__ {
			status = "okay";

			port {
				mipi_lvds2_sditf: endpoint {
					remote-endpoint = <&isp0_vir0>;
				};
			};
		};
	};

	fragment@8 {
		target = <&rkcif_mmu>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@9 {
		target = <&isp0_mmu>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@10 {
		target = <&rkisp0>;

		__overlay__ {
			status = "okay";
		};
	};

	fragment@11 {
		target = <&rkisp0_vir2>;

		__overlay__ {
			status = "okay";

			port {
				#address-cells = <1>;
				#size-cells = <0>;

				isp0_vir0: endpoint@0 {
					reg = <0>;
					remote-endpoint = <&mipi_lvds2_sditf>;
				};
			};
		};
	};

	fragment@12 {
		target = <&pinctrl>;

		__overlay__ {
			camera {
				cam_pwdn_gpio: cam-pwdn-gpio {
					rockchip,pins = <1 RK_PD3 RK_FUNC_GPIO &pcfg_pull_up>;
				};
			};
		};
	};
};
